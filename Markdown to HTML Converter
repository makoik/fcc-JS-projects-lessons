// requires id="markdown-input" textarea, html-output element, preview element

const markdown = document.getElementById("markdown-input");
const output = document.getElementById("html-output");
const preview = document.getElementById("preview");

const converts = [
  {
  regex: /^# (.+)$/gm,
  replace: "<h1>$1</h1>"
  },
  {
    regex: /^## (.+)$/gm,
    replace: "<h2>$1</h2>"
  },
  {
    regex: /^### (.+)$/gm,
    replace: "<h3>$1</h3>"
  },
  {
    regex:  /\*\*(.+?)\*\*/g,
    replace: "<strong>$1</strong>"
  },
  {
    regex: /__(.+?)__/g,
    replace: "<strong>$1</strong>"
  },
  {
    regex: /\*(.+?)\*/g,
    replace: "<em>$1</em>"
  },
  {
    regex:  /_(.+?)_/g,
    replace: "<em>$1</em>"
  },
  {
    regex: /^# (\*\*.+?\*\*)$/gm,
    replace: "<h1><strong>$1</strong></h1>"
  },
  {
    regex: /^# (__.+?__)$/gm,
    replace: "<h1><strong>$1</strong></h1>"
  },
  {
    regex:  /!\[(.*?)\]\((.*?)\)/g,
    replace: '<img alt="$1" src="$2">'
  },
  {
    regex: /\[(.*?)\]\((.*?)\)/g,
    replace: '<a href="$2">$1</a>'
  },
  {
    regex: /^> (.+)$/gm,
    replace: "<blockquote>$1</blockquote>"
  },
  {
    regex: /^> \*\*(.+?)\*(.+?)\*\*/gm,
    replace: "<blockquote><strong>$1<em>$2</em></strong></blockquote>"
  },
];

function convertMarkdown() {
  let conversion = markdown.value;

  converts.forEach(({ regex, replace}) => {
    conversion = conversion.replace(regex, replace);
  });
  return conversion;
}

markdown.addEventListener("input", () => {
output.textContent = convertMarkdown();
preview.innerHTML = convertMarkdown();

}); 
